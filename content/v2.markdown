---
title: DNSimple API v2
excerpt: This page provides an overview of the official DNSimple API v2.
---

# Overview

This page provides an overview of the official DNSimple API v2.

* TOC
{:toc}

---

## URL

If you want to test your API integration, you should use our [Sandbox environment](/sandbox/). Requests to Sandbox must use the `api.sandbox.dnsimple.com` domain.

Once you are ready to take your API integration live, you must use our production domain: `api.dnsimple.com`.

All API access is over HTTPS.

In order to maintain compatibility in the future, all requests must specify an API version, which is appended to the URL.

    https://api.dnsimple.com/v2/


## Current Version

The current API version is `v1`. `v2` is in public beta.


## Authentication

There are three ways to authenticate through DNSimple API: the **HTTP Basic Authentication**, the **OAuth2 token** and the **Domain token**.

The HTTP Basic Authentication and the OAuth grant access to the entire account or user accounts, whereas the Domain token only grants access to the DNS records of a specific domain zone.

##### HTTP Basic Authentication

~~~
curl -u 'EMAIL:PASSWORD' https://api.dnsimple.com/v2/whoami
~~~

Users with two-factor authentication enabled must send an extra HTTP header for the request.

~~~
curl -u 'EMAIL:PASSWORD' -H "X-Dnsimple-OTP: 2FA-TOKEN" https://api.dnsimple.com/v2/whoami
~~~

In case two-factor authentication is enabled but the header is not sent, the application will respond with a `401` and a response header: `X-Dnsimple-OTP: required`.

##### OAuth2 Token

~~~
curl -H 'Authorization: Bearer OAUTH-TOKEN' https://api.dnsimple.com/v2/whoami
~~~

Note that Oauth2 tokens cam be acquired [programmatically and via OAuth dance](/v2/oauth/) or can be generated from the user/account sections in the DNSimple application.

##### DNSimple Domain Token

~~~
curl -H 'X-DNSimple-Domain-Token: DOMAIN-TOKEN' https://api.dnsimple.com/v2/_/domains/example.com
~~~

The [Authentication](/v2/authentication/) page provides more information about how to use them.

## Response Codes

DNSimple uses conventional HTTP response codes to indicate success or failure of an API request.

### Successful

- `200 OK` - Everything worked as expected.
- `201 Created` - The request was successful and a resource was created. This is typically a response from a POST request to create a resource, such as the registration of a Domain or the creation of a Contact.
- `202 Accepted` - The request has been accepted for processing. This is typically a response from a POST request that is handled async in our system, such as a Domain transfer request.
- `204 No Content` - The request was successful but the response body is empty. This is typically a response from a DELETE request to delete a resource.

### Error

- `400 Bad Request` - A required parameter or the request is invalid.
- `401 Unauthorized` - The authentication credentials are invalid.
- `402 Payment Required` - Your account is not subscribed or not in good standing.
- `404 Not Found` - The requested resource doesn't exist.
- `429 Too Many Requests` - You exceeded the allowed number of requests per hour and your request has temporarily been throttled.

### Kaboom!

- `500`, `502`, `503`, `504 Server errors` - something went wrong on DNSimple's end.

## Responses

All successful responses will be returned as a JSON object with at least one key: `data`.

The `data` element will contain either a single JSON object or a list of JSON objects, depending on the endpoint.

~~~json
{
  "data": {
    "id": 1,
    "first_name": "Jane",
    "last_name": "Smith"
  }
}
~~~

## Errors

Error responses will be returned as a JSON object with at least a `message` key. For example, failure to authenticate would result in a 401 response with a body like this:

~~~json
{"message":"Authentication failed"}
~~~

## Pagination

Any API endpoint that returns a list of items requires pagination. By default we will return 30 records from any listing endpoint.

If an API endpoint returns a list of items, then it will include a `pagination` object that contains pagination information.

The `pagination` object contains the following details:

- `current_page`: The page currently returned (default: 1)
- `per_page`: The number of entries returned per page (default: 30)
- `total_entries`: The total number of entries available in the entire collection
- `total_pages`: The total number of pages available given the current `per_page` value

For example:

~~~json
{
  "data": [
    {
      "id": 1,
      "first_name": "Jane",
      "last_name": "Smith"
    },
    {
      "id": 3,
      "first_name": "John",
      "last_name": "Smith",
    }
  ],
  "pagination": {
    "current_page": 1,
    "per_page": 30,
    "total_entries": 2,
    "total_pages": 1
  }
}
~~~

You may include the following arguments as query parameters when you call an API endpoint that supports pagination:

- `page`: The page to return (default: 1)
- `per_page`: The number of entries to return per page (default: 30)

For example:

    https://api.dnsimple.com/v2/_/domains?per_page=100&page=2


## Rate limiting

There is a limit to the number of requests that you can perform per hour.

- For **authenticated requests** you can make **up to 2400 requests per hour**.
- For **unauthenticated requests**, you can make **up to 30 requests per hour**.

You can see your current rate limit status by checking the HTTP headers of any API request:

~~~
$ curl -H "Authorization: Bearer ACCESS-TOKEN" -I "https://api.dnsimple.com/v2/whoami"

HTTP/1.1 200 OK
Date: Fri, 11 Dec 2015 11:15:42 GMT
Status: 200 OK
Connection: close
X-RateLimit-Limit: 2400
X-RateLimit-Remaining: 2399
X-RateLimit-Reset: 1449836141
~~~

The headers have all the information you need to know about your current rate limit status:

| **Header** | **Description** |
|------------|-----------------|
| `X-RateLimit-Limit` | The maximum number of requests you can perform per hour. |
| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |
| `X-RateLimit-Reset` | The time at which the current rate limit window in [Unix time](https://en.wikipedia.org/wiki/Unix_time) format. |

Once you go over the rate limit you will receive an error response:

~~~
$ curl -H "Authorization: Bearer ACCESS-TOKEN" -I "https://api.dnsimple.com/v2/whoami"

HTTP/1.1 429 Too Many Requests
X-Ratelimit-Limit: 2400
X-Ratelimit-Remaining: 0
X-RateLimit-Reset: 1449836141
Content-Type: application/json; charset=utf-8
Content-Length: 28

{"message":"quota exceeded"}
~~~


